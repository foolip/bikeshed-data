d:p1000r0
P1000R0
2 April 2018

C++ IS schedule
https://wg21.link/p1000r0




Herb Sutter
-
d:p1000r1
P1000R1
21 June 2018

C++ IS schedule
https://wg21.link/p1000r1




Herb Sutter
-
d:p1001r0
P1001R0
14 March 2018

Target Vectorization Policies from Parallelism V2 TS to C++20
https://wg21.link/p1001r0




Alisdair Meredith
-
d:p1001r1
P1001R1
16 March 2018

Target Vectorization Policies from Parallelism V2 TS to C++20
https://wg21.link/p1001r1




Alisdair Meredith
-
d:p1002r0
P1002R0
1 April 2018

Try-catch blocks in constexpr functions
https://wg21.link/p1002r0




Louis Dionne
-
d:p1003r0
P1003R0
16 March 2018

C++ Standard Library Issues Resolved Directly In Jacksonville
https://wg21.link/p1003r0




Marshall Clow
-
d:p1004r0
P1004R0
1 April 2018

Making std::vector constexpr
https://wg21.link/p1004r0




Louis Dionne
-
d:p1004r1
P1004R1


Making std::vector constexpr
https://wg21.link/p1004r1




Louis Dionne
-
d:p1005r0
P1005R0
16 March 2018

namespace std { namespace fs = filesystem; }
https://wg21.link/p1005r0




Bryce Adelstein Lelbach, S. Davis Herring
-
d:p1005r1
P1005R1


namespace std { namespace fs = filesystem; }
https://wg21.link/p1005r1




Bryce Adelstein Lelbach, Davis Herring
-
d:p1006r0
P1006R0
1 April 2018

Constexpr in std::pointer_traits
https://wg21.link/p1006r0




Louis Dionne
-
d:p1006r1
P1006R1


Constexpr in std::pointer_traits
https://wg21.link/p1006r1




Louis Dionne
-
d:p1007r0
P1007R0
4 May 2018

std::assume_aligned
https://wg21.link/p1007r0




Timur Doumler, Chandler Carruth
-
d:p1007r1
P1007R1
25 June 2018

std::assume_aligned
https://wg21.link/p1007r1




Timur Doumler, Chandler Carruth
-
d:p1007r2
P1007R2


std::assume_aligned
https://wg21.link/p1007r2




Timur Doumler, Chandler Carruth
-
d:p1008r0
P1008R0
7 May 2018

Prohibit aggregate types with user-declared constructors
https://wg21.link/p1008r0




Timur Doumler, Arthur O’Dwyer, Richard Smith, Howard E. Hinnant
-
d:p1008r1
P1008R1
8 June 2018

Prohibit aggregates with user-declared constructors
https://wg21.link/p1008r1




Timur Doumler, Arthur O’Dwyer, Richard Smith, Howard E. Hinnant, Nicolai Josuttis
-
d:p1009r0
P1009R0


Array size deduction in new-expressions
https://wg21.link/p1009r0




Timur Doumler
-
d:p1010r0
P1010R0
6 May 2018

Container support for implicit lifetime types
https://wg21.link/p1010r0




Mark Zeren, Chris Kennelly
-
d:p1010r1
P1010R1


Container support for implicit lifetime types
https://wg21.link/p1010r1




Mark Zeren, Chris Kennelly
-
d:p1011r0
P1011R0
20 March 2018

Constant Pointer View - std::as_const Strikes Back!
https://wg21.link/p1011r0




Adam David Alan Martin
-
d:p1012r0
P1012R0
2 April 2018

Ternary Right Fold Expression
https://wg21.link/p1012r0




Frank Zingsheim
-
d:p1013r0
P1013R0
2 April 2018

Explicit concept expressions
https://wg21.link/p1013r0




Thomas Köppe, Hubert S.K. Tong
-
d:p1013r1
P1013R1
10 June 2018

Explicit concept expressions
https://wg21.link/p1013r1




Thomas Köppe, Hubert S.K. Tong
-
d:p1014r0
P1014R0
1 April 2018

A Unit Type for C++
https://wg21.link/p1014r0




Andrew Sutton, Nevin Liber
-
d:p1015r0
P1015R0
2 April 2018

WG21 2018-03 Jacksonville Record of Discussion
https://wg21.link/p1015r0




Patrice Roy
-
d:p1016r0
P1016R0
6 May 2018

A few additional type manipulation utilities
https://wg21.link/p1016r0




Vincent Reverdy
-
d:p1017r0
P1017R0
6 May 2018

Executors should be variadic
https://wg21.link/p1017r0




Hartmut Kaiser, John Biddiscombe
-
d:p1018r0
P1018R0
18 March 2018

Evolution status after Jacksonville 2018
https://wg21.link/p1018r0




Ville Voutilainen
-
d:p1018r1
P1018R1
9 June 2018

Evolution status after Rapperswil 2018
https://wg21.link/p1018r1




Ville Voutilainen
-
d:p1019r0
P1019R0
7 May 2018

Integrating Executors with Parallel Algorithms
https://wg21.link/p1019r0




Jared Hoberock
-
d:p1019r1
P1019R1


Integrating Executors with Parallel Algorithms
https://wg21.link/p1019r1




Jared Hoberock
-
d:p1020r0
P1020R0
8 April 2018

Smart pointer creation with default initialization
https://wg21.link/p1020r0




Glen Joseph Fernandes, Peter Dimov
-
d:p1021r0
P1021R0
7 May 2018

Extensions to Class Template Argument Deduction
https://wg21.link/p1021r0




Mike Spertus
-
d:p1021r1
P1021R1


Filling holes in Class Template Argument Deduction
https://wg21.link/p1021r1




Mike Spertus, Timur Doumler, Richard Smith
-
d:p1022r0
P1022R0
20 April 2018

Material for 2018 JAX Discussions of Hazard Pointer and Read-Copy-Update (RCU)
https://wg21.link/p1022r0




Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt
-
d:p1023r0
P1023R0
6 May 2018

constexpr comparison operators for std::array
https://wg21.link/p1023r0




Tristan Brindle
-
d:p1024r0
P1024R0
6 May 2018

Usability Enhancements for std::span
https://wg21.link/p1024r0




Tristan Brindle
-
d:p1024r1
P1024R1
24 June 2018

Usability Enhancements for std::span
https://wg21.link/p1024r1




Tristan Brindle
-
d:p1025r0
P1025R0
23 April 2018

Update The Reference To The Unicode Standard
https://wg21.link/p1025r0




Steve Downey
-
d:p1025r1
P1025R1
7 June 2018

Update The Reference To The Unicode Standard
https://wg21.link/p1025r1




Steve Downey, JeanHeyd Meneide, Martinho Fernandes
-
d:p1026r0
P1026R0
6 May 2018

A call for a Data Persistence (iostream v2) study group
https://wg21.link/p1026r0




Niall Douglas
-
d:p1026r1
P1026R1


A call for an `Elsewhere Memory' study group
https://wg21.link/p1026r1




Niall Douglas
-
d:p1028r0
P1028R0
6 May 2018

SG14 status_code and standard error object for P0709 Zero-overhead deterministic exceptions
https://wg21.link/p1028r0




Niall Douglas
-
d:p1028r1
P1028R1
20180830

status_code and standard error object for P0709 Zero-overhead deterministic exceptions
https://wg21.link/p1028r1




Niall Douglas
-
d:p1029r0
P1029R0
6 May 2018

SG14 [[move_relocates]]
https://wg21.link/p1029r0




Niall Douglas
-
d:p1029r1
P1029R1


[[move_relocates]]
https://wg21.link/p1029r1




Niall Douglas
-
d:p1030r0
P1030R0
6 May 2018

std::filesystem::path_view
https://wg21.link/p1030r0




Niall Douglas
-
d:p1030r1
P1030R1
18 June 2018

std::filesystem::path_view
https://wg21.link/p1030r1




Niall Douglas
-
d:p1031r0
P1031R0
6 May 2018

Low level file i/o library
https://wg21.link/p1031r0




Niall Douglas
-
d:p1031r1
P1031R1


Low level file i/o library
https://wg21.link/p1031r1




Niall Douglas
-
d:p1032r0
P1032R0
3 May 2018

Misc constexpr bits
https://wg21.link/p1032r0




Antony Polukhin
-
d:p1032r1
P1032R1


Misc constexpr bits
https://wg21.link/p1032r1




Antony Polukhin
-
d:p1033r0
P1033R0
6 May 2018

Rangify the uninitialised memory algorithms!
https://wg21.link/p1033r0




Casey Carter, Christopher Di Bella
-
d:p1033r1
P1033R1
25 June 2018

Rangify the uninitialised memory algorithms!
https://wg21.link/p1033r1




Casey Carter, Christopher Di Bella
-
d:p1035r0
P1035R0
7 May 2018

Input range adaptors
https://wg21.link/p1035r0




Christopher Di Bella
-
d:p1035r1
P1035R1


Input range adaptors
https://wg21.link/p1035r1




Christopher Di Bella
-
d:p1037r0
P1037R0
6 May 2018

Deep Integration of the Ranges TS
https://wg21.link/p1037r0




Eric Niebler, Casey Carter
-
d:p1040r0
P1040R0
7 May 2018

std::embed
https://wg21.link/p1040r0




JeanHeyd Meneide
-
d:p1040r1
P1040R1
6 June 2018

std::embed
https://wg21.link/p1040r1




JeanHeyd Meneide
-
d:p1040r2
P1040R2


std::embed
https://wg21.link/p1040r2




JeanHeyd Meneide
-
d:p1041r0
P1041R0
24 April 2018

Make char16_t/char32_t string literals be UTF-16/32
https://wg21.link/p1041r0




Martinho Fernandes
-
d:p1041r1
P1041R1
15 June 2018

Make char16_t/char32_t string literals be UTF-16/32
https://wg21.link/p1041r1




R. Martinho Fernandes
-
d:p1042r0
P1042R0
27 April 2018

__VA_OPT__ wording clarifications
https://wg21.link/p1042r0




Hubert S.K. Tong
-
d:p1042r1
P1042R1
4 June 2018

__VA_OPT__ wording clarifications
https://wg21.link/p1042r1




Hubert S.K. Tong
-
d:p1043r0
P1043R0
7 May 2018

Narrow contracts in string_view versus P0903R1
https://wg21.link/p1043r0




Andrzej Krzemieński, Nevin Liber
-
d:p1044r0
P1044R0
4 May 2018

std::async() in an Executors World
https://wg21.link/p1044r0




Thomas Rodgers, H. Carter Edwards, Mark Hoemmen
-
d:p1045r0
P1045R0
29 April 2018

constexpr Function Parameters
https://wg21.link/p1045r0




David Stone
-
d:p1046r0
P1046R0
28 April 2018

Automatically Generate More Operators
https://wg21.link/p1046r0




David Stone
-
d:p1048r0
P1048R0
1 May 2018

A proposal for a type trait to detect scoped enumerations
https://wg21.link/p1048r0




Juan Alday
-
d:p1050r0
P1050R0
7 May 2018

Fractional Numeric Type
https://wg21.link/p1050r0




John McFarlane
-
d:p1051r0
P1051R0
3 May 2018

std::experimental::expected LWG design issues
https://wg21.link/p1051r0




Vicente J. Botet Escribá
-
d:p1052r0
P1052R0
2 May 2018

Modules, Macros, and Build Systems
https://wg21.link/p1052r0




Boris Kolpackov
-
d:p1053r0
P1053R0
6 May 2018

Future-proofing continuations for executors
https://wg21.link/p1053r0




Lee Howes, Eric Niebler
-
d:p1053r1
P1053R1
24 June 2018

Future-proofing continuations for executors
https://wg21.link/p1053r1




Lee Howes, Eric Niebler
-
d:p1054r0
P1054R0
7 May 2018

A Unified Futures Proposal for C++
https://wg21.link/p1054r0




Lee Howes, Bryce Adelstein Lelbach, David S. Hollman, Michał Dominiak
-
d:p1055r0
P1055R0
26 April 2018

A Modest Executor Proposal
https://wg21.link/p1055r0




Kirk Shoop, Eric Niebler, Lee Howes
-
d:p1056r0
P1056R0
5 May 2018

Add coroutine task type
https://wg21.link/p1056r0




Lewis Baker, Gor Nishanov
-
d:p1056r1
P1056R1


Add lazy coroutine (coroutine task) type
https://wg21.link/p1056r1




Lewis Baker, Gor Nishanov
-
d:p1059r0
P1059R0
6 May 2018

Adapting Asio to use std::expected
https://wg21.link/p1059r0




Thomas Rodgers
-
d:p1061r0
P1061R0
1 May 2018

Structured Bindings can introduce a Pack
https://wg21.link/p1061r0




Barry Revzin, Jonathan Wakely
-
d:p1062r0
P1062R0
7 May 2018

Diet Graphics
https://wg21.link/p1062r0




Bryce Adelstein Lelbach, Olivier Giroux, Zach Laine, Corentin Jabot, Vittorio Romeo
-
d:p1063r0
P1063R0
6 May 2018

Core Coroutines
https://wg21.link/p1063r0




Geoff Romer, James Dennett, Chandler Carruth
-
d:p1063r1
P1063R1


Core Coroutines
https://wg21.link/p1063r1




Geoff Romer, James Dennett, Chandler Carruth
-
d:p1064r0
P1064R0
4 May 2018

Allowing Virtual Function Calls in Constant Expressions
https://wg21.link/p1064r0




Peter Dimov, Vassil Vassilev
-
d:p1065r0
P1065R0


constexpr INVOKE
https://wg21.link/p1065r0




Barry Revzin
-
d:p1066r0
P1066R0
7 May 2018

How to catch an exception_ptr without even try-ing
https://wg21.link/p1066r0




Mathias Stearn
-
d:p1066r1
P1066R1


How to catch an exception_ptr without even try-ing
https://wg21.link/p1066r1




Mathias Stearn
-
d:p1067r0
P1067R0
4 May 2018

C++ Dependency Management: Package Consumption vs Development
https://wg21.link/p1067r0




Boris Kolpackov
-
d:p1068r0
P1068R0
7 May 2018

Vector API for random number generation
https://wg21.link/p1068r0




Ilya Burylov, Alexey Kukanov, Ruslan Arutyunyan, Andrey Nikolaev, Pablo Halpern
-
d:p1069r0
P1069R0


Refining standard library support for Class Template Argument Deduction
https://wg21.link/p1069r0




Mike Spertus, Walter E. Brown, Stephan T. Lavavej
-
d:p1070r0
P1070R0
7 May 2018

SG5: Transactional Memory (TM) Meeting Minutes 2018/04/09
https://wg21.link/p1070r0




Michael Wong
-
d:p1071r0
P1071R0
7 May 2018

SG14: Low Latency Meeting Minutes 2018/04/11- 2018/05/02
https://wg21.link/p1071r0




Michael Wong
-
d:p1072r0
P1072R0
4 May 2018

Default Initialization for basic_string
https://wg21.link/p1072r0




Chris Kennelly, Mark Zeren
-
d:p1072r1
P1072R1


Optimized Initialization for basic_string and vector
https://wg21.link/p1072r1




Chris Kennelly, Mark Zeren
-
d:p1073r0
P1073R0
4 May 2018

constexpr! functions
https://wg21.link/p1073r0




Richard Smith, Andrew Sutton, Daveed Vandevoorde
-
d:p1073r1
P1073R1
22 June 2018

constexpr! functions
https://wg21.link/p1073r1




Richard Smith, Andrew Sutton, Daveed Vandevoorde
-
d:p1073r2
P1073R2


Immediate functions
https://wg21.link/p1073r2




Richard Smith, Andrew Sutton, Daveed Vandevoorde
-
d:p1074r0
P1074R0
7 May 2018

CWG defect Defined Behavior of Invalid Pointers
https://wg21.link/p1074r0




Maged Michael, David Goldblatt, Michael Wong, Paul McKenney
-
d:p1076r0
P1076R0
5 May 2018

Editorial clause reorganization
https://wg21.link/p1076r0




Jens Maurer
-
d:p1076r1
P1076R1
23 June 2018

Editorial clause reorganization
https://wg21.link/p1076r1




Jens Maurer
-
d:p1077r0
P1077R0
4 May 2018

Allowing Virtual Destructors to be “Trivial”
https://wg21.link/p1077r0




Peter Dimov
-
d:p1079r0
P1079R0
6 May 2018

A minimal solution to the concepts syntax problems
https://wg21.link/p1079r0




Bjarne Stroustrup
-
d:p1080r0
P1080R0
6 May 2018

SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25
https://wg21.link/p1080r0




Tom Honermann
-
d:p1081r0
P1081R0
7 May 2018

On empty structs in the standard library
https://wg21.link/p1081r0




Vincent Reverdy, Collin Gress
-
d:p1082r0
P1082R0
6 May 2018

C++ Standard Library Issues to be moved in Rapperswil
https://wg21.link/p1082r0




Marshall Clow
-
d:p1083r0
P1083R0
6 May 2018

Move resource_adaptor from Library TS to the C++ WP
https://wg21.link/p1083r0




Pablo Halpern
-
d:p1083r1
P1083R1


Move resource_adaptor from Library TS to the C++ WP
https://wg21.link/p1083r1




Pablo Halpern
-
d:p1084r0
P1084R0
6 May 2018

Today's return-type-requirements Are Insufficient
https://wg21.link/p1084r0




Walter E. Brown, Casey Carter
-
d:p1084r1
P1084R1


Today's return-type-requirements Are Insufficient
https://wg21.link/p1084r1




Walter E. Brown, Casey Carter
-
d:p1085r0
P1085R0
4 May 2018

Should Span be Regular?
https://wg21.link/p1085r0




Tony Van Eerd
-
d:p1085r1
P1085R1
4 May 2018

Should Span be Regular?
https://wg21.link/p1085r1




Tony Van Eerd
-
d:p1085r2
P1085R2


Should Span be Regular?
https://wg21.link/p1085r2




Tony Van Eerd
-
d:p1086r0
P1086R0
7 May 2018

Natural Syntax: Keep It Simple
https://wg21.link/p1086r0




Gabriel Dos Reis
-
d:p1087r0
P1087R0
7 May 2018

Modules for Standard C++
https://wg21.link/p1087r0




Gabriel Dos Reis, Richard Smith
-
d:p1089r0
P1089R0
6 May 2018

Sizes Should Only span Unsigned
https://wg21.link/p1089r0




Robert Douglas, Nevin Liber, Marshall Clow
-
d:p1089r2
P1089R2


Sizes Should Only span Unsigned
https://wg21.link/p1089r2




Robert Douglas, Nevin Liber, Marshall Clow
-
d:p1090r0
P1090R0
7 May 2018

Aggregate initialization in the presence of deleted constructors
https://wg21.link/p1090r0




Ville Voutilainen
-
d:p1091r0
P1091R0
7 May 2018

Extending structured bindings to be more like variable declarations
https://wg21.link/p1091r0




Nicolas Lesser
-
d:p1091r1
P1091R1


Extending structured bindings to be more like variable declarations
https://wg21.link/p1091r1




Nicolas Lesser
-
d:p1093r0
P1093R0
7 May 2018

Is undefined behaviour preserved?
https://wg21.link/p1093r0




Andrew Bennieston, Jonathan Coe, Daven Gahir, Thomas Russell
-
d:p1094r0
P1094R0
7 May 2018

Nested Inline Namespaces
https://wg21.link/p1094r0




Alisdair Meredith
-
d:p1094r1
P1094R1


Nested Inline Namespaces
https://wg21.link/p1094r1




Alisdair Meredith
-
d:p1095r0
P1095R0


Zero overhead deterministic failure - A unied mechanism for C and C++
https://wg21.link/p1095r0




Niall Douglas
-
d:p1096r0
P1096R0


Simplify the customization point for structured bindings
https://wg21.link/p1096r0




Timur Doumler
-
d:p1097r0
P1097R0
21 June 2018

Named character escapes
https://wg21.link/p1097r0




R. Martinho Fernandes
-
d:p1097r1
P1097R1
22 June 2018

Named character escapes
https://wg21.link/p1097r1




R. Martinho Fernandes
-
d:p1099r0
P1099R0
23 May 2018

Using Enum
https://wg21.link/p1099r0




Gašper Ažman, Jonathan Müller
-
d:p1099r2
P1099R2


Using Enum
https://wg21.link/p1099r2




Gašper Ažman, Jonathan Müller
-
d:p1100r0
P1100R0
18 June 2018

Efficient composition with DynamicBuffer
https://wg21.link/p1100r0




Vinnie Falco
-
d:p1101r0
P1101R0


Vector Length Agnostic SIMD
https://wg21.link/p1101r0




-
d:p1102r0
P1102R0
20 June 2018

Down with ()!
https://wg21.link/p1102r0




Alex Christensen, JF Bastien
-
d:p1103r0
P1103R0
22 June 2018

Merging Modules
https://wg21.link/p1103r0




Richard Smith, Gabriel Dos Reis
-
d:p1103r1
P1103R1


Merging Modules
https://wg21.link/p1103r1




Richard Smith
-
d:p1105r0
P1105R0
21 June 2018

Leaving no room for a lower-level language: A C++ Subset
https://wg21.link/p1105r0




Ben Craig
-
d:p1105r1
P1105R1


Leaving no room for a lower-level language: A C++ Subset
https://wg21.link/p1105r1




Ben Craig, Ben Saks
-
d:p1108r0
P1108R0
22 June 2018

web_view
https://wg21.link/p1108r0




Hal Finkel
-
d:p1108r1
P1108R1


web_view
https://wg21.link/p1108r1




Hal Finkel
-
d:p1109r0
P1109R0
12 June 2018

WG21 2018-06 Rapperswil Record of Discussion
https://wg21.link/p1109r0




Nina Dinka Ranns
-
d:p1109r1
P1109R1


WG21 2018-06 Rapperswil Record of Discussion
https://wg21.link/p1109r1




Nina Dinka Ranns
-
d:p1110r0
P1110R0
7 June 2018

A placeholder with no name
https://wg21.link/p1110r0




Jeffrey Yasskin, JF Bastien
-
d:p1111r0
P1111R0
4 June 2018

Resolutions to NB Comments on the Parallelism TS v2
https://wg21.link/p1111r0




Bryce Adelstein Lelbach, Matthias Kretz
-
d:p1112r0
P1112R0


Language support for class layout control
https://wg21.link/p1112r0




Pal Balog
-
d:p1113r0
P1113R0
8 June 2018

Core Language Working Group "ready" Issues for the June, 2018 (Rapperswil) meeting
https://wg21.link/p1113r0




William M. Miller
-
d:p1114r0
P1114R0
5 June 2018

Core Language Working Group "tentatively ready" Issues for the June, 2018 (Rapperswil) meeting
https://wg21.link/p1114r0




William M. Miller
-
d:p1118r0
P1118R0
8 June 2018

Concat and Split on simd<> objects
https://wg21.link/p1118r0




Tim Shen, Matthias Kretz
-
d:p1119r0
P1119R0
22 June 2018

ABI for std::hardware_{constructive,destructive}_interference_size
https://wg21.link/p1119r0




JF Bastien, Olivier Giroux, Olivier Giroux, Hal Finkel, Thomas Rodgers, Matthias Kretz
-
d:p1120r0
P1120R0
8 June 2018

Consistency improvements for <=> and other comparison operators
https://wg21.link/p1120r0




Richard Smith
-
d:p1121r0
P1121R0


Hazard Pointers: Proposed Interface and Wording for Concurrency TS 2
https://wg21.link/p1121r0




Maged M. Michael, Michael Wong, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt, Frank Birbacher, Mathias Stearn
-
d:p1122r0
P1122R0
7 June 2018

Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
https://wg21.link/p1122r0




Paul McKenney, Michael Wong, Maged M. Michael, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt, Frank Birbacher
-
d:p1122r1
P1122R1


Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
https://wg21.link/p1122r1




Paul McKenney, Michael Wong, Maged M. Michael, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt, Frank Birbacher
-
d:p1123r0
P1123R0
8 June 2018

Editorial Guidance for merging P0019r8 and P0528r3
https://wg21.link/p1123r0




Daniel Sunderland
-
d:p1128r0
P1128R0
21 June 2018

Summer 2018 WG21 Batavia LWG Meeting Information
https://wg21.link/p1128r0




Walter E. Brown
-
d:p1131r0
P1131R0
23 June 2018

Core Issue 2292: simple-template-id is ambiguous between class-name and type-name
https://wg21.link/p1131r0




Jens Maurer
-
d:p1131r1
P1131R1


Core Issue 2292: simple-template-id is ambiguous between class-name and type-name
https://wg21.link/p1131r1




Jens Maurer
-
d:p1132r0
P1132R0
25 June 2018

out_ptr - a scalable output pointer abstraction
https://wg21.link/p1132r0




JeanHeyd Meneide, Todor Buyukliev, Isabella Muerte
-
d:p1132r1
P1132R1


out_ptr - a scalable output pointer abstraction
https://wg21.link/p1132r1




JeanHeyd Meneide, Todor Buyukliev, Isabella Muerte
-
d:p1133r0
P1133R0
21 June 2018

Networking TS Associations For Call Wrappers
https://wg21.link/p1133r0




Vinnie Falco
-
d:p1135r0
P1135R0
12 June 2018

The C++20 Synchronization Library
https://wg21.link/p1135r0




Bryce Adelstein Lelbach, Olivier Giroux, JF Bastien
-
d:p1135r1
P1135R1


The C++20 Synchronization Library
https://wg21.link/p1135r1




Bryce Adelstein Lelbach, Olivier Giroux, JF Bastien
-
d:p1136r0
P1136R0
21 June 2018

2018-09 Bellevue ad-hoc meeting information
https://wg21.link/p1136r0




Herb Sutter
-
d:p1137r0
P1137R0
24 June 2018

SG16: Unicode meeting summaries 2018/05/16 - 2018/06/20
https://wg21.link/p1137r0




Tom Honermann
-
d:p1138r0
P1138R0


Deprecating ATOMIC_VAR_INIT
https://wg21.link/p1138r0




Aaron Ballman
-
d:p1141r0
P1141R0
23 June 2018

Yet another approach for constrained declarations
https://wg21.link/p1141r0




Ville Voutilainen, Thomas Köppe, Andrew Sutton, Herb Sutter, Gabriel Dos Reis, Bjarne Stroustrup, Jason Merrill, Hubert Tong, Eric Niebler, Casey Carter, Tom Honermann, Erich Keane
-
d:p1141r1
P1141R1


Yet another approach for constrained declarations
https://wg21.link/p1141r1




Ville Voutilainen, Thomas Köppe, Andrew Sutton, Herb Sutter, Gabriel Dos Reis, Bjarne Stroustrup, Jason Merrill, Hubert Tong, Eric Niebler, Casey Carter, Tom Honermann, Erich Keane, Walter E. Brown, Michael Spertus
-
d:p1142r0
P1142R0
25 June 2018

Thoughts on a conservative terse syntax for constraints
https://wg21.link/p1142r0




Thomas Köppe
-
d:p1143r0
P1143R0


Adding the `[[constinit]]` attribute
https://wg21.link/p1143r0




Eric Fiselier
-
d:p1144r0
P1144R0


Object relocation in terms of move plus destroy
https://wg21.link/p1144r0




Arthur O'Dwyer, Mingxin Wang
-
d:p1145r0
P1145R0


Buffer Sequence Adaptors
https://wg21.link/p1145r0




Vinnie Falco
-
d:p1147r0
P1147R0


Printing `volatile` Pointers
https://wg21.link/p1147r0




Bryce Adelstein Lelbach
-
d:p1148r0
P1148R0


Cleaning up Clause 20
https://wg21.link/p1148r0




Tim Song
-
d:p1149r0
P1149R0


Constexpr regex
https://wg21.link/p1149r0




Antony Polukhin
-
d:p1152r0
P1152R0


Deprecating volatile
https://wg21.link/p1152r0




JF Bastien
-
d:p1153r0
P1153R0


Copying volatile subobjects is not trivial
https://wg21.link/p1153r0




Arthur O'Dwyer, JF Bastien
-
d:p1154r0
P1154R0


Type traits for structural comparison
https://wg21.link/p1154r0




Arthur O'Dwyer, Jeff Snyder
-
d:p1155r0
P1155R0


More implicit moves
https://wg21.link/p1155r0




Arthur O'Dwyer, David Stone
-
d:p1156r0
P1156R0


Merged Modules and Tooling
https://wg21.link/p1156r0




Boris Kolpackov
-
d:p1157r0
P1157R0


Multi-argument constrained-parameter
https://wg21.link/p1157r0




Zhihao Yuan
-
d:p1158r0
P1158R0


Concept-defined placeholder types
https://wg21.link/p1158r0




Zhihao Yuan
-
d:p1159r0
P1159R0


Type Erased Iterators for modern C++
https://wg21.link/p1159r0




Thomas Russell
-
d:p1160r0
P1160R0


Add Test Polymorphic Memory Resource to the Standard Library
https://wg21.link/p1160r0




Attila Fehér, Alisdair Meredith
-
d:p1161r0
P1161R0


Deprecate uses of the comma operator in subscripting expressions
https://wg21.link/p1161r0




Corentin Jabot
-
d:p1163r0
P1163R0
20180831

Explicitly Implicifying explicit Constructors
https://wg21.link/p1163r0




Nevin Liber
-
d:p1165r0
P1165R0


Fixing allocator usage for operator+(basic_string)
https://wg21.link/p1165r0




Tim Song
-
d:p1167r0
P1167R0


Improving function templates with Class Template Argument Deduction
https://wg21.link/p1167r0




Mike Spertus
-
d:p1168r0
P1168R0


How to make Terse Notation soar with Class Template Argument Deduction
https://wg21.link/p1168r0




Mike Spertus
-
d:p1169r0
P1169R0


static operator()
https://wg21.link/p1169r0




Barry Revzin
-
d:p1170r0
P1170R0


Overload sets as function parameters
https://wg21.link/p1170r0




Barry Revzin
-
d:p1171r0
P1171R0


Synchronously waiting on asynchronous operations
https://wg21.link/p1171r0




Lewis Baker
-
d:p1172r0
P1172R0


The Concept of Memory Allocator
https://wg21.link/p1172r0




Mingxin Wang
-
d:p1175r0
P1175R0


A simple and practical optional reference for C++
https://wg21.link/p1175r0




JeanHeyd Meneide
-
d:p1177r0
P1177R0


Package Ecosystem Plan
https://wg21.link/p1177r0




Rene Rivera
-
d:p1178r0
P1178R0


C++ Compile
https://wg21.link/p1178r0




Rene Rivera
-
d:p1179r0
P1179R0


Lifetime safety: Preventing common dangling
https://wg21.link/p1179r0




Herb Sutter
-
d:p1180r0
P1180R0


Response to P1156
https://wg21.link/p1180r0




Richard Smith
-
d:p1181r0
P1181R0


Proposing unless
https://wg21.link/p1181r0




Morwenn Ed
-
d:p1182r0
P1182R0


New names for the power-of-2 templates (and their header)
https://wg21.link/p1182r0




Gennaro Prot
-
d:p1184r0
P1184R0


A Module Mapper
https://wg21.link/p1184r0




Nathan Sidwell
-
d:p1185r0
P1185R0


<=> != ==
https://wg21.link/p1185r0




Barry Revzin
-
d:p1186r0
P1186R0


When do you actually use <=>?
https://wg21.link/p1186r0




Barry Revzin
-
d:p1187r0
P1187R0


A type trait for std::compare_3way()'s type
https://wg21.link/p1187r0




Barry Revzin
-
d:p1190r0
P1190R0


I did not order this! Why is it on my bill?
https://wg21.link/p1190r0




David Stone
-
d:p1191r0
P1191R0


Adding operator<=> to types that are not currently comparable
https://wg21.link/p1191r0




David Stone
-
d:p1192r0
P1192R0


Experience report - integrating Executors with Parallel Algorithms
https://wg21.link/p1192r0




Thomas Rodgers
-
d:p1194r0
P1194R0


The Compromise Executors Proposal: A lazy simplification of P0443
https://wg21.link/p1194r0




Lee Howes, Eric Niebler, Kirk Shoop, Bryce Lelbach, David S. Hollman
-
d:p1195r0
P1195R0


Making <system_error> constexpr
https://wg21.link/p1195r0




Peter Dimov
-
d:p1196r0
P1196R0


Value-based std::error_category comparison
https://wg21.link/p1196r0




Peter Dimov
-
d:p1197r0
P1197R0


A non-allocating overload of error_category::message()
https://wg21.link/p1197r0




Peter Dimov
-
d:p1198r0
P1198R0


Adding error_category::failed()
https://wg21.link/p1198r0




Peter Dimov
-
d:p1199r0
P1199R0


A simple proposal for unifying generic and object-oriented programming
https://wg21.link/p1199r0




Mike Spertus
-
d:p1200r0
P1200R0


High noon for the 2D Graphics proposal
https://wg21.link/p1200r0




Guy Davidson, Roger Orr, Ville Voutilainen, Jose Daniel Garcia Sanchez, Jean-Paul Rigault, Matevz Tadel
-
d:p1201r0
P1201R0


Variant direct comparisons
https://wg21.link/p1201r0




Oleg Fatkhiev, Antony Polukhin
-
d:p1202r0
P1202R0


Asymmetric fences
https://wg21.link/p1202r0




David Goldblatt
-
d:p1203r0
P1203R0


Modular main()
https://wg21.link/p1203r0




Boris Kolpackov, Richard Smith
-
d:p1204r0
P1204R0


Canonical Project Structure
https://wg21.link/p1204r0




Boris Kolpackov
-
d:p1205r0
P1205R0


Teleportation via co_await
https://wg21.link/p1205r0




Olivier Giroux, JF Bastien
-
d:p1206r0
P1206R0


Range constructors for standard containers and views
https://wg21.link/p1206r0




Corentin Jabot, Christopher Di Bella
-
d:p1207r0
P1207R0


Movability of Single-pass Iterators
https://wg21.link/p1207r0




Corentin Jabot
-
d:p1208r0
P1208R0


Adopt source_location from Library Fundamentals V3 for C++20
https://wg21.link/p1208r0




Corentin Jabot, Robert Douglas
-
d:p1209r0
P1209R0


Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20
https://wg21.link/p1209r0




Alisdair Meredith, Stephan T. Lavavej
-
d:p1210r0
P1210R0
20180930

Completing the Rebase of Library Fundamentals, Version 3, Working Draft
https://wg21.link/p1210r0




Alisdair Meredith
-
d:p1212r0
P1212R0


Modules and Freestanding
https://wg21.link/p1212r0




Ben Craig
-
d:p1213r0
P1213R0


Global Module Fragment is Unnecessary
https://wg21.link/p1213r0




Nathan Sidwell
-
d:p1214r0
P1214R0


Pointer to Member Functions and Member Objects are just Callables!
https://wg21.link/p1214r0




JeanHeyd Meneide
-
d:p1217r0
P1217R0


Out-of-thin-air, revisited, again
https://wg21.link/p1217r0




Hans-J. Boehm
-
d:p1218r0
P1218R0


Redefinitions in Legacy Imports
https://wg21.link/p1218r0




Nathan Sidwell
-
d:p1219r0
P1219R0


Homogeneous variadic function parameters
https://wg21.link/p1219r0




James Touton
-
d:p1220r0
P1220R0


Controlling When Inline Functions are Emitted
https://wg21.link/p1220r0




Chris Kennelly
-
d:p1221r0
P1221R0


Parametric Expressions
https://wg21.link/p1221r0




Jason Rice
-
d:p1222r0
P1222R0


A Standard flat_set
https://wg21.link/p1222r0




Zach Laine
-
d:p1223r0
P1223R0


find_backward
https://wg21.link/p1223r0




Zach Laine
-
d:p1224r0
P1224R0


C++ Standard Library Issues to be moved in San Diego
https://wg21.link/p1224r0




Marshall Clow
-
d:p1225r0
P1225R0


Feedback on 2D Graphics
https://wg21.link/p1225r0




JF Bastien
-
d:p1227r0
P1227R0


Signed size() functions
https://wg21.link/p1227r0




Jorg Brown
-
d:p1229r0
P1229R0


Labelled Parameters
https://wg21.link/p1229r0




Jorg Brown
-
d:p1230r0
P1230R0


Recursive Type Template Instantiation
https://wg21.link/p1230r0




Mingxin Wang
-
d:p1231r0
P1231R0


Proposal for Study Group: C++ Education
https://wg21.link/p1231r0




JC van Winkel, Christopher Di Bella
-
d:p1232r0
P1232R0


Integrating executors with the standard library through customization
https://wg21.link/p1232r0




Lee Howes, Eric Niebler, Kirk Shoop, Lewis Baker, Robert Geva
-
d:p1233r0
P1233R0


Shift-by-negative in shift_left and shift_right
https://wg21.link/p1233r0




Ashley Hedberg, Matt Calabrese
-
d:p1235r0
P1235R0


Implicit constexpr
https://wg21.link/p1235r0




Bryce Adelstein Lelbach, Hana Dusíková
-
d:p1236r0
P1236R0


Alternative Wording for P0907R4 Signed Integers are Two's Complement
https://wg21.link/p1236r0




Jens Maurer
-
d:p1237r0
P1237R0


SG16: Unicode meeting summaries 2018/07/11 - 2018/10/03
https://wg21.link/p1237r0




Tom Honermann
-
d:p1238r0
P1238R0


SG16: Unicode Direction
https://wg21.link/p1238r0




Tom Honermann, Corentin Jabot, JeanHeyd Meneide, Mark Zeren, Martinho Fernandes, Peter Bindels, Steve Downey, Zach Laine
-
d:p1239r0
P1239R0


Placed Before
https://wg21.link/p1239r0




Daniel Lustig
-
d:p1240r0
P1240R0


Scalable Reflection in C++
https://wg21.link/p1240r0




Andrew Sutton, Faisal Vali, Daveed Vandevoorde
-
d:p1241r0
P1241R0


In support of merging coroutines into C++20
https://wg21.link/p1241r0




Lee Howes, Eric Niebler, Lewis Baker
-
d:p1242r0
P1242R0


Single-file modules with the Atom semantic properties rule
https://wg21.link/p1242r0




Jeff Snyder
-
d:p1243r0
P1243R0


Rangify New Algorithms
https://wg21.link/p1243r0




Dan Raviv
-
d:p1244r0
P1244R0


Dependent Execution for a Unified Executors Proposal for C++
https://wg21.link/p1244r0




Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown
-
d:p1245r0
P1245R0


export module containing [[attribute]];
https://wg21.link/p1245r0




Bruno Cardoso Lopes, JF Bastien
-
d:p1246r0
P1246R0


The no_float function attribute
https://wg21.link/p1246r0




Bruno Cardoso Lopes, JF Bastien
-
d:p1247r0
P1247R0


Disabling static destructors: introducing no_destroy and always_destroy attributes
https://wg21.link/p1247r0




Bruno Cardoso Lopes, JF Bastien, Erik Pilkington
-
d:p1248r0
P1248R0


Fixing 'Relation's
https://wg21.link/p1248r0




Tomasz Kamiński
-
d:p1249r0
P1249R0


std::forward from std::initializer_list
https://wg21.link/p1249r0




Alex Christensen
-
d:p1250r0
P1250R0


Extension by inspecting members of User Defined Types?
https://wg21.link/p1250r0




Titus Winters, Ashley Hedberg, Eric Fiselier
-
d:p1251r0
P1251R0


A more constexpr bitset
https://wg21.link/p1251r0




Morris Hafner
-
d:p1252r0
P1252R0


Ranges Design Cleanup
https://wg21.link/p1252r0




Casey Carter
-
d:p1254r0
P1254R0


Notes on C++ Package Management
https://wg21.link/p1254r0




Steve Downey
-
d:p1255r0
P1255R0


A view of 0 or 1 elements: view::maybe
https://wg21.link/p1255r0




Steve Downey
-
d:p1256r0
P1256R0


Executors Should Go To A TS
https://wg21.link/p1256r0




Detlef Vollmann
-
d:p1258r0
P1258R0


Don't Make C++ Unimplementable On Small CPUs
https://wg21.link/p1258r0




Detlef Vollmann
-
d:p1259r0
P1259R0


Merge most of Networking TS into C++ Working Draft
https://wg21.link/p1259r0




Detlef Vollmann
-
d:p1260r0
P1260R0


Pattern Matching
https://wg21.link/p1260r0




Michael Park
-
d:p1261r0
P1261R0


Supporting Pipelines in C++
https://wg21.link/p1261r0




Michael Wong, Daniel Garcia, Ronan Keryell
-
d:p1263r0
P1263R0


Controlling the instantiation of vtables and RTTI
https://wg21.link/p1263r0




Louis Dionne
-
d:p1264r0
P1264R0


Revising the wording of stream input operations
https://wg21.link/p1264r0




Louis Dionne
-
d:p1267r0
P1267R0


Custom Constraint Diagnostics
https://wg21.link/p1267r0




Hana Dusíková, Bryce Adelstein Lelbach
-
d:p1269r0
P1269R0


Three Years with the Networking TS
https://wg21.link/p1269r0




Jason Carey
-
d:p1271r0
P1271R0


Move resource_adaptor from Library TS to the C++ WP
https://wg21.link/p1271r0




Pablo Halpern
-
d:p1272r0
P1272R0


Byteswapping for fun&&nuf
https://wg21.link/p1272r0




Isabella Muerte
-
d:p1273r0
P1273R0


86 The Absurd (From Exceptions)
https://wg21.link/p1273r0




Isabella Muerte
-
d:p1274r0
P1274R0


Bang For The Buck
https://wg21.link/p1274r0




Isabella Muerte
-
d:p1275r0
P1275R0


Desert Sessions: Improving hostile environment interactions
https://wg21.link/p1275r0




Isabella Muerte
-
d:p1276r0
P1276R0


Void Main
https://wg21.link/p1276r0




Isabella Muerte
-
d:p1277r0
P1277R0


Subscripts On Parade
https://wg21.link/p1277r0




Isabella Muerte
-
d:p1278r0
P1278R0


offsetof For the Modern Era
https://wg21.link/p1278r0




Isabella Muerte
-
d:p1279r0
P1279R0


std::breakpoint
https://wg21.link/p1279r0




Isabella Muerte
-
d:p1280r0
P1280R0


Integer Width Literals
https://wg21.link/p1280r0




Isabella Muerte
-
d:p1281r0
P1281R0


Feature Presentation
https://wg21.link/p1281r0




Isabella Muerte
-
d:p1282r0
P1282R0


Ceci N’est Pas Une Pipe: Adding a workflow operator to C++
https://wg21.link/p1282r0




Isabella Muerte
-
d:p1283r0
P1283R0


Sharing is Caring
https://wg21.link/p1283r0




Isabella Muerte
-
d:p1284r0
P1284R0


Allowing Inlining of Replaceable Functions
https://wg21.link/p1284r0




Chris Kennelly
-
d:p1285r0
P1285R0


Improving Completeness Requirements for Type Traits
https://wg21.link/p1285r0




Walter E. Brown
-
d:p1286r0
P1286R0


Contra CWG DR1778
https://wg21.link/p1286r0




Richard Smith
-
d:p1287r0
P1287R0


Supporting async use-cases for interrupt_token
https://wg21.link/p1287r0




Lewis Baker, Kirk Shoop
-
d:p1288r0
P1288R0


Coroutine concepts and metafunctions
https://wg21.link/p1288r0




Lewis Baker
-
d:p1289r0
P1289R0


Access control in contract conditions
https://wg21.link/p1289r0




J. Daniel Garcia, Ville Voutilainen
-
d:p1291r0
P1291R0


std::ranges::less<> Should Be More!
https://wg21.link/p1291r0




Walter E. Brown
-
d:p1292r0
P1292R0


Customization Point Functions
https://wg21.link/p1292r0




Matt Calabrese
-
d:p1293r0
P1293R0


ostream_joiner
https://wg21.link/p1293r0




Mike Spertus, Nathan Wilson
-
d:p1294r0
P1294R0


Proposed resolution for US104: Allocator-aware regular expressions (rev 3)
https://wg21.link/p1294r0




Michael Spertus, John Maddock
-
d:p1295r0
P1295R0


Spaceship library update
https://wg21.link/p1295r0




Tomasz Kamiński
-
d:p1296r0
P1296R0


[[assert: std::disjoint(A,nA, B,nB)]]: Contract assertions as an alternate spelling of ‘restrict’
https://wg21.link/p1296r0




Phil Miller, Justin Szaday
-
d:p1298r0
P1298R0


Reserve more freedom for atomic_ref<> implementers
https://wg21.link/p1298r0




Olivier Giroux
-
d:p1299r0
P1299R0


Module Preamble is Unnecessary
https://wg21.link/p1299r0




Nathan Sidwell
-
d:p1300r0
P1300R0


Remember the FORTRAN
https://wg21.link/p1300r0




Jussi Pakkanen, Isabella Muerte, Peter Bindels
-
d:p1301r0
P1301R0


nodiscard should have a reason
https://wg21.link/p1301r0




JeanHeyd Meneide, Isabella Muerte
-
d:p1302r0
P1302R0


Implicit Module Partition Lookup
https://wg21.link/p1302r0




Isabella Muerte, Richard Smith
-
d:p1303r0
P1303R0


Inline Module Partitions
https://wg21.link/p1303r0




Isabella Muerte
-
d:p1304r0
P1304R0


Simplifying Extern Template
https://wg21.link/p1304r0




Isabella Muerte
-
d:p1305r0
P1305R0


Deprecate The Addressof Operator
https://wg21.link/p1305r0




Isabella Muerte
-
d:p1306r0
P1306R0


Expansion statements
https://wg21.link/p1306r0




Andrew Sutton, Sam Goodrick, Daveed Vandevoorde
-
d:p1307r0
P1307R0


weak_equality considered harmful
https://wg21.link/p1307r0




Tony Van Eerd
-
d:p1308r0
P1308R0


Pattern Matching
https://wg21.link/p1308r0




David Sankel, Dan Sarginson, Sergei Murzin
-
d:p1310r0
P1310R0


Unifying the many ways to compare
https://wg21.link/p1310r0




David Stone
-
d:p1312r0
P1312R0


Comparison Concepts
https://wg21.link/p1312r0




David Stone
-
d:p1313r0
P1313R0


Let's Talk About Package Specification
https://wg21.link/p1313r0




Matthew Woehlke
-
d:p1314r0
P1314R0


unique_val: a default-on-move
https://wg21.link/p1314r0




Miguel Ojeda
-
d:p1315r0
P1315R0


secure_val: a secure-clear-on-move type
https://wg21.link/p1315r0




Miguel Ojeda
-
d:p1316r0
P1316R0


A when_all() operator for coroutines
https://wg21.link/p1316r0




Lewis Baker
-
d:p1317r0
P1317R0


Remove return type deduction in std::apply
https://wg21.link/p1317r0




Aaryaman Sagar
-
d:p1318r0
P1318R0


Tuple application traits
https://wg21.link/p1318r0




Aaryaman Sagar
-
d:p1319r0
P1319R0


Changes between C++11 and C++14
https://wg21.link/p1319r0




Thomas Köppe
-
d:p1320r0
P1320R0


Allowing contract predicates on non-first declarations
https://wg21.link/p1320r0




Ville Voutilainen
-
d:p1321r0
P1321R0


UB in contract violations
https://wg21.link/p1321r0




Ville Voutilainen
-
d:p1322r0
P1322R0


Networking TS enhancement to enable custom I/O executors
https://wg21.link/p1322r0




Christopher Kohlhoff
-
d:p1323r0
P1323R0


Contract postconditions and return type deduction
https://wg21.link/p1323r0




Hubert S.K. Tong
-
